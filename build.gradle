/*
 * File: build.gradle
 * Converted to work with Gradle as well as Maven
 * Converted from using TestNG to JUnit
 * RSK 07/31/2019
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }

    maven {
        url = 'https://maven.repository.redhat.com/techpreview/all'
    }

    maven {
        url = 'https://repository.jboss.org/nexus/content/groups/public'
    }

    maven {
        url = 'https://repository.jboss.org/nexus/content/repositories/deprecated/'
    }

    maven {
        url = 'https://plugins.gradle.org/m2/'
    }

}

/*
 * RSK 08/01/2019
 * Updated bouncycastle dependancies from 1.49 to 1.62
 * Per:
 * Application dependency org.bouncycastle:bcprov-jdk15on-1.49 is vulnerable: 
 * CVE-2018-1000613 CVE-2016-1000341 CVE-2016-1000352 CVE-2016-1000338 CVE-2016-1000339 CVE-2016-1000344. 
 * Recommendation: use version 1.62
 * RSK 03/10/2021
 * Updated bouncycstle dependnacies from 1.62 to 1.68
 * Per:
 * CWE-327 - Use of a Broken or Risky Cryptographic Algorithm
 * CVE-2018-5382 - Bouncy Castle BKS version 1 keystore (BKS-V1) files use an HMAC that is only 16 bits long, which can allow an attacker to compromise the integrity of a BKS-V1 keystore. All BKS-V1 keystores are vulnerable. Bouncy Castle release 1.47 introduces BKS version 2, which uses a 160-bit MAC.
 * Recommendation: use version 1.68
 * New Reccomended Long Tem Upgrade is 1.68.0.redhat-00001
 */
dependencies {
    implementation 'org.apache.logging.log4j:log4j:2.13.3'
    implementation 'commons-io:commons-io:2.4'
    implementation 'commons-codec:commons-codec:1.15'
    /* implementation 'com.github.johnrengelman.shadow:5.2.0' */
    implementation 'com.itextpdf:itextpdf:5.5.13'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.68.0.redhat-00001'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.68.0.redhat-00001'
    implementation 'org.bouncycastle:bcpg-jdk15on:1.68'
    testCompile 'junit:junit:4.13.2'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    implementation "net.linguica.gradle:maven-settings-plugin:0.5"
}


group = 'com.rk'
version = '2.0.2'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

publishing {
    publications {
        maven(MavenPublication) {
            /*
            * groupId = group
            * artifactId = 'encryption-utils'
            * version = version
            */
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

/*
 * Default Jar task runs when called with:
 * gradle clean build
 * OR
 * gradle build
 */
jar {
    baseName = 'encryption-utils'  
    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } 
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' 
    manifest {
        attributes(
            'Built-By'       : System.properties['user.name'],
            'Specification-Title' : baseName,
            'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
            'Build-Revision' : version,
            'Class-Path'     : configurations.compile.collect { it.getName() }.join(' '),
            'Created-By'     : "Gradle ${gradle.gradleVersion}",
            'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
            'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }
}

/*
 * call this task to get an uber jar
 * Call like:
 * gradle clean build customFatjar
 * OR
 * gradle build customFatjar
 */
task customFatJar(type: Jar) {  
    baseName = 'encryption-utils'
    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } 
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' 
    manifest {
        attributes(
            'Built-By'       : System.properties['user.name'],
            'Specification-Title' : baseName,
            'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
            'Build-Revision' : version,
            'Class-Path'     : configurations.compile.collect { it.getName() }.join(' '),
            'Created-By'     : "Gradle ${gradle.gradleVersion}",
            'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
            'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}